%YAML 1.1
---
actions:
- utter_echo_dkw
- utter_show_map
- utter_show_rankchart
- utter_show_datareport
- utter_greet
- utter_form
- utter_mso
- utter_need_expertise
- utter_data
- utter_xbm
- utter_whois_patient_question
- utter_whois_patient_answer
- utter_ask_gender_question_me
- utter_ask_gender_question_someone_else
- utter_ask_gender_answer
- utter_ask_age_question_me
- utter_ask_age_question_male
- utter_ask_age_question_female
- utter_ask_age_answer
- utter_ask_feedback_question
- utter_ask_service_type_question
- utter_ask_service_type_answer
- utter_ask_basic_knowledge_question
- utter_ask_basic_knowledge_answer
- utter_ask_cooperation
- utter_ask_dkw_question_me
- utter_ask_dkw_question_male
- utter_ask_dkw_question_female
- utter_ask_dkw_answer
- utter_ask_symptoms_question_me
- utter_ask_symptoms_question_male
- utter_ask_symptoms_question_female
- utter_ask_symptoms_question_instruction
- utter_ask_symptoms_answer
- utter_ask_current_medication_question_me
- utter_ask_current_medication_question_male
- utter_ask_current_medication_question_female
- utter_ask_current_medication_question_instruction
- utter_ask_current_medication_answer
- utter_ask_medical_appointment_question_me
- utter_ask_medical_appointment_question_male
- utter_ask_medical_appointment_question_female
- utter_ask_medical_appointment_question_instruction
- utter_ask_medical_appointment_answer
- utter_ask_choose_med_app
- utter_ask_lm_appointment
- utter_lm_app
- utter_ask_lm_consultant
- utter_lm_consultant
- utter_ask_email_question
- utter_ask_email_answer
- utter_working_on_it
- utter_medical_record_created
- utter_report_created
- utter_ask_usecase
- utter_ask_businessmail
- utter_ask_jobfunction
- utter_ask_budget
- utter_ask_company
- utter_ask_goal
- utter_inform_privacypolicy
- utter_moreinformation
- utter_confirm_salesrequest
- utter_docu
- utter_confirmation_email
- utter_sales_contact
- utter_already_subscribed
- utter_contact_email
- utter_no_speak
- utter_out_of_scope
- utter_possibilities
- utter_ask_name
- utter_change_mind
- utter_must_accept
- utter_noworries
- utter_bye
- utter_awesome
- utter_great
- utter_thank_usecase
- utter_canthelp
- utter_nohelp
- utter_thumbsup
- utter_cantsignup
- utter_ask_feedback
- utter_quickstart
- utter_quickstart_nlu_only
- utter_ask_migration
- utter_switch_dialogflow
- utter_switch_luis
- utter_cant_answer_tech_question
- utter_have_you_used_rasa_before
- utter_are_you_new_to_chatbots
- utter_encourage_building_bot
- utter_anything_else
- utter_chatbot_tutorial
- utter_no_guide_for_switch
- utter_ask_which_product
- utter_ask_for_nlu_specifics
- utter_core_tutorial
- utter_dont_know_nlu_part
- utter_nlu_intent_tutorial
- utter_nlu_entity_tutorial
- utter_offer_recommendation
- utter_what_language
- utter_ask_entities
- utter_search_bar
- utter_spacy_or_tensorflow
- utter_tensorflow
- utter_spacy
- utter_duckling
- utter_crf
- utter_nlu_tools
- utter_duckling_info
- utter_rasa_cost
- utter_source_code
- utter_what_help
- utter_first_bot_with_rasa
- utter_getstarted
- utter_explain_stack
- utter_stack_details
- utter_explain_nlucore
- utter_explain_nlu
- utter_explain_core
- utter_tryout
- utter_also_explain_nlu
- utter_also_explain_core
- utter_direct_install
- utter_built_bot_before
- utter_ask_which_tool
- utter_suggestion
- utter_ask_python_installed
- utter_get_python
- utter_ask_pip_or_conda
- utter_installation_with_pip
- utter_installation_with_conda
- utter_ask_ready_to_build
- utter_ask_describe_problem
- utter_direct_to_forum_for_help
- utter_get_starter_pack
- utter_direct_to_step4
- utter_ask_if_problem
- utter_get_started_step1
- utter_get_started_step2
- utter_get_started_step3
- utter_get_started_step4
- utter_ask_faq_platform
- utter_ask_faq_languages
- utter_ask_faq_tutorialcore
- utter_ask_faq_tutorialnlu
- utter_ask_faq_opensource
- utter_ask_faq_voice
- utter_ask_faq_slots
- utter_ask_faq_channels
- utter_ask_faq_differencecorenlu
- action_subscribe_newsletter
- action_store_sales_info
- action_store_budget
- action_store_usecase
- action_chitchat
- action_faqs
- action_store_name
- action_store_company
- action_store_job
- action_store_email
- action_pause
- action_store_unknown_product
- action_store_unknown_nlu_part
- action_store_bot_language
- action_store_entity_extractor
- action_set_onboarding
- utter_ask_weather
- utter_ask_builder
- utter_ask_howdoing
- utter_ask_whoisit
- utter_ask_whatisrasa
- utter_ask_isbot
- utter_ask_howold
- utter_ask_languagesbot
- utter_ask_restaurant
- utter_ask_time
- utter_ask_wherefrom
- utter_ask_whoami
- utter_handleinsult
- utter_nicetomeeyou
- utter_telljoke
- utter_ask_whatismyname
- utter_howwereyoubuilt
- utter_ask_whatspossible
- action_select_installation_command
- action_store_problem_description
- action_greet_user
- action_report_hospitals
- action_report_stats
- action_reply_email
- utter_sent_app_confirmation
- action_report_city
- utter_report_stats
config:
  store_entities_as_slots: true
entities:
- jobfunction
- company
- email
- name
- amount-of-money
- number
- value
- current_api
- product
- feedback_value
- patient_value
- gender_value
- service_type
- basic_knowledge
- language
- dkw
- hospitals
- nlu_part
- entity
forms:
- suggestion_form
intents:
- enter_data:
    use_entities: false
- mood_confirm:
    use_entities: true
- contact_sales:
    use_entities: true
- signup_newsletter:
    use_entities: true
- confirm_gender:
    use_entities: true
- confirm_service_type:
    use_entities: true
- confirm_email:
    use_entities: true
- confirm_symptoms:
    use_entities: true
- confirm_current_medication:
    use_entities: true
- confirm_past_surgery:
    use_entities: true
- confirm_medical_appointment:
    use_entities: true
- confirm_dkw:
    use_entities: true
- confirm_lm_appointment:
    use_entities: true
- confirm_lm_consultant:
    use_entities: true
- greet:
    use_entities: true
- confirm_patient:
    use_entities: true
- confirm_age:
    use_entities: true
- confirm_basic_knowledge:
    use_entities: true
- human_handoff:
    use_entities: true
- deny:
    use_entities: true
- ask_builder:
    use_entities: true
- ask_weather:
    use_entities: true
- ask_howdoing:
    use_entities: true
- ask_whatspossible:
    use_entities: true
- ask_whatisrasa:
    use_entities: true
- ask_isbot:
    use_entities: true
- ask_howold:
    use_entities: true
- ask_languagesbot:
    use_entities: true
- ask_restaurant:
    use_entities: true
- ask_time:
    use_entities: true
- ask_wherefrom:
    use_entities: true
- ask_whoami:
    use_entities: true
- ask_whatismyname:
    use_entities: true
- howwereyoubuilt:
    use_entities: true
- handleinsult:
    use_entities: true
- nicetomeeyou:
    use_entities: true
- telljoke:
    use_entities: true
- out_of_scope:
    use_entities: true
- thank:
    use_entities: true
- ask_whoisit:
    use_entities: true
- bye:
    use_entities: true
- canthelp:
    use_entities: true
- feedback:
    use_entities: true
- switch:
    use_entities: true
- new_project:
    use_entities: true
- how_to_get_started:
    use_entities: true
- technical_question:
    use_entities: true
- nlu_info:
    use_entities: true
- pipeline_recommendation:
    use_entities: true
- nlu_generation_tool_recommendation:
    use_entities: true
- rasa_cost:
    use_entities: true
- source_code:
    use_entities: true
- suggestion:
    use_entities: true
- install_rasa:
    use_entities: true
- get_started_step1:
    use_entities: true
- get_started_step2:
    use_entities: true
- get_started_step3:
    use_entities: true
- get_started_step4:
    use_entities: true
- ask_faq_platform:
    use_entities: true
- ask_faq_languages:
    use_entities: true
- ask_faq_tutorialcore:
    use_entities: true
- ask_faq_tutorialnlu:
    use_entities: true
- ask_faq_opensource:
    use_entities: true
- ask_faq_voice:
    use_entities: true
- ask_faq_slots:
    use_entities: true
- ask_faq_channels:
    use_entities: true
- ask_faq_differencecorenlu:
    use_entities: true
slots:
  basic_knowledge:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - basic_knowledge_yes
    - basic_knowledge_no
  basic_stats:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  budget:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  can_use_spacy:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.BooleanSlot
  city_data:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  company_name:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  current_api:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - dialogflow
    - luis
  data_stored:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.BooleanSlot
  dkw:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  email:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  entity_extractor:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - ner_crf
    - ner_spacy
    - ner_duckling_http
  feedback_value:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - positive
    - negative
  gender_value:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - male
    - female
  hospitals:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.UnfeaturizedSlot
  job_function:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  language:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.UnfeaturizedSlot
  nlu_part:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - entity recognition
    - intent classification
    - duckling
  onboarding:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.BooleanSlot
  package_manager:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  patient_value:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - oneself
    - others
  person_name:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  problem_description:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
  product:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - core
    - nlu
    - stack
  requested_slot:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.UnfeaturizedSlot
  service_type:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.CategoricalSlot
    values:
    - data
    - mso
    - xbm
    - undecided
  shown_privacy:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.UnfeaturizedSlot
  subscribed:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.BooleanSlot
  suggestion:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.UnfeaturizedSlot
  unknown_nlu_part:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.UnfeaturizedSlot
  unknown_product:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.UnfeaturizedSlot
  use_case:
    auto_fill: true
    initial_value: null
    type: rasa_core.slots.TextSlot
templates:
  utter_already_subscribed:
  - text: Looks like {email} is already subscribed - good choice! If you haven't received
      a newsletter in a while, maybe check your spam folder 🗑
  utter_also_explain_core:
  - text: Would you also like me to explain Rasa Core?
  utter_also_explain_nlu:
  - text: Would you also like me to explain Rasa NLU?
  utter_anything_else:
  - text: It's been a pleasure to chat with you. Hope you've found a solution to your
      problem.
  utter_ask_age_answer:
  - elements:
    - buttons:
      - title: ''
        type: age
        url: http://linkmedicine.cn
      title: ''
    text: ''
  utter_ask_age_question_female:
  - text: How old is she?
  utter_ask_age_question_male:
  - text: How old is he?
  utter_ask_age_question_me:
  - text: How old are you?
  utter_ask_basic_knowledge_answer:
  - buttons:
    - payload: /confirm_basic_knowledge{"basic_knowledge":"basic_knowledge_yes"}
      title: 'Yes'
    - payload: /confirm_basic_knowledge{"basic_knowledge":"basic_knowledge_yes"}
      title: Bascially
    - payload: /confirm_basic_knowledge{"basic_knowledge":"basic_knowledge_no"}
      title: Not so much
    text: ''
  utter_ask_basic_knowledge_question:
  - text: Do you have knowledge of the patient's condition？
  utter_ask_budget:
  - text: What's your annual budget for conversational AI? 💸
  utter_ask_builder:
  - text: The engineers at Rasa 🛠
  - text: One of the smart engineers at Rasa! 🧠
  utter_ask_businessmail:
  - text: What's your business email?
  utter_ask_choose_med_app:
  - text: 请在日期选择器中选择您的治疗日期。
  utter_ask_company:
  - text: What company do you work for?
  utter_ask_cooperation:
  - text: Please answer following question to the best of your knowledge.
  utter_ask_current_medication_answer:
  - elements:
    - buttons:
      - title: 提交
        type: medication
        url: http://linkmedicine.cn
      title: ''
    text: ''
  utter_ask_current_medication_question_female:
  - text: Please briefly describe her current medication or the plan for treatment.
  utter_ask_current_medication_question_instruction:
  - text: Tab "Submit" when you are finished with the description for medication and
      treatment; click "Unclear" if you don't have this information.
  utter_ask_current_medication_question_male:
  - text: Please briefly describe his current medication or the plan for treatment.
  utter_ask_current_medication_question_me:
  - text: Please briefly describe your current medication or the plan for treatment.
  utter_ask_describe_problem:
  - text: Can you describe the problem you are having?
  utter_ask_diagnosis:
  - text: 你有准备好患者的诊断书和最近的治疗记录么？
  utter_ask_dkw_answer:
  - elements:
    - buttons:
      - title: ''
        type: dkwcomplete
        url: http://linkmedicine.cn
      title: ''
    text: ''
  utter_ask_dkw_question_female:
  - text: What is her diagnosis?
  utter_ask_dkw_question_male:
  - text: What is his diagnosis?
  utter_ask_dkw_question_me:
  - text: What is your diagnosis?
  utter_ask_email_answer:
  - elements:
    - buttons:
      - title: 提交
        type: register
        url: http://linkmedicine.cn
      title: ''
    text: ''
  utter_ask_email_question:
  - text: 请问您的邮箱地址是什么？
  utter_ask_entities:
  - text: To help you, what kind of entities do you want to extract?
  utter_ask_faq_channels:
  - text: We have a comprehensive list of connectors, but if you do not find the one
      you are looking for you can always create a custom connector following this
      guide.
  utter_ask_faq_differencecorenlu:
  - text: Rasa NLU’s job is to interpret messages, and Rasa Core’s job is to decide
      what should happen next.
  utter_ask_faq_languages:
  - text: You can use Rasa NLU to build assistants in any language you want!
  utter_ask_faq_opensource:
  - text: Yes. We strive to provide well-maintained and documented open source tools,
      allowing all makers to build the best AI assistants without friction.
  utter_ask_faq_platform:
  - text: Rasa Platform is our enterprise product. It expands Rasa Stack and empowers
      business users to iterate faster, change the content of the AI assistant and
      see what impact it had.
  utter_ask_faq_slots:
  - text: Slots act as a key-value store which can be used to store information the
      user provided (e.g their home city) as well as information gathered about the
      outside world (e.g. the result of a database query).
  utter_ask_faq_tutorialcore:
  - text: You can find a preview of Rasa Core [here](https://rasa.com/docs/core/quickstart/).
  utter_ask_faq_tutorialnlu:
  - text: You can find a preview of Rasa NLU [here](https://rasa.com/docs/core/quickstart/).
  utter_ask_faq_voice:
  - text: Yes, that is possible! You can connect Rasa to any channel you like. Here
      you can find more informations.
  utter_ask_feedback:
  - buttons:
    - payload: /feedback{"feedback_value":"positive"}
      title: Like😉
    - payload: /feedback{"feedback_value":"negative"}
      title: Dislike🤷🏻‍
    text: ''
  utter_ask_feedback_question:
  - text: How is this conversation going?
  utter_ask_for_nlu_specifics:
  - text: Anything, in particular, e.g. intent classification or entity recognition?
  utter_ask_gender_answer:
  - buttons:
    - payload: /confirm_gender{"gender_value":"male"}
      title: Male
    - payload: /confirm_gender{"gender_value":"female"}
      title: Female
    text: ''
  utter_ask_gender_question_me:
  - text: Are you male or female?
  utter_ask_gender_question_someone_else:
  - text: Is the patient male or female?
  utter_ask_goal:
  - text: Do you want more Rasa in your life? You can subscribe to our newsletter
      or you can talk to our nice sales team 🧞‍
  utter_ask_howdoing:
  - text: I'm great! Thanks for asking.
  - text: I'm good, thanks!
  - text: A little bit too warm, otherwise fine.
  utter_ask_howold:
  - text: '42'
  - text: Old enough to be a bot
  - text: Age is just an issue of mind over matter. If you don’t mind, it doesn’t
      matter.
  utter_ask_if_problem:
  - text: Do you have a problem?
  utter_ask_isbot:
  - text: Yep I'm a bot!
  utter_ask_jobfunction:
  - text: What's your job? 🕴
  utter_ask_languagesbot:
  - text: I can spell baguette in French, but unfortunately English is the only language
      I can answer you in.
  - text: I am in the process of learning, but at the moment I can only speak English.
  utter_ask_lm_appointment:
  - text: To keep you better informed of US hospitals by expertise, LINKMedicine™
      offers data science consultants to help interpret data regarding your diagnosis.
      Please indicate your availbility for an appointment for such service and your
      contact info.
  utter_ask_lm_consultant:
  - text: 请从下列选项中选择需要咨询的专家：
  utter_ask_medical_appointment_answer:
  - elements:
    - buttons:
      - title: 提交
        type: datepicker
        url: http://linkmedicine.cn
      title: '请在日期选择器中选择您下一次appointment的日期:'
    text: ''
  utter_ask_medical_appointment_question_female:
  - text: Does she have any upcoming appointments or procedures? If yes, please indicate
      the date.
  utter_ask_medical_appointment_question_instruction:
  - text: "Again, please tab \"Submit\" after you select the date of your medical\
      \ appointment in the datepicker; click \"Unclear\" if currently you don't have\
      \ an active medical appointment. "
  utter_ask_medical_appointment_question_male:
  - text: Does he have any upcoming appointments or procedures? If yes, please indicate
      the date.
  utter_ask_medical_appointment_question_me:
  - text: Do you have any upcoming appointments or procedures? If yes, please indicate
      the date.
  utter_ask_migration:
  - text: Are you migrating from another tool?
  utter_ask_name:
  - text: What's your name?
  utter_ask_pip_or_conda:
  - text: Do you want to install pip or conda for the installation?
  utter_ask_python_installed:
  - text: Do you have Python installed?
  utter_ask_ready_to_build:
  - text: Ready to start building a chatbot?
  utter_ask_restaurant:
  - text: I am sorry I can’t recommend you a restaurant as I usually cook at home.
  utter_ask_service_type_answer:
  - buttons:
    - payload: /confirm_service_type{"service_type":"data"}
      title: Help choose hospitals with best expertise for my diseases
    - payload: /confirm_service_type{"service_type":"mso"}
      title: Seek remote second opinion from expertise hospitals
    - payload: /confirm_service_type{"service_type":"undecided"}
      title: Make direct referal to expertise hospitals
    - payload: /confirm_service_type{"service_type":"xbm"}
      title: I am an international patient seeking medical care
    - payload: /confirm_service_type{"service_type":"undecided"}
      title: Unclear, I need your expertise advice
    text: ''
  utter_ask_service_type_question:
  - text: ' About the plan for overseas medicine, please choose among the following
      options:'
  utter_ask_symptoms_answer:
  - elements:
    - buttons:
      - title: 提交
        type: symptom
        url: http://linkmedicine.cn
      title: ''
    text: ''
  utter_ask_symptoms_question_female:
  - text: When did her symptoms first start?
  utter_ask_symptoms_question_instruction:
  - text: Tab "Submit" when you are finished with the description for symptoms; click
      "Unclear" if you don't know the patient medical information
  utter_ask_symptoms_question_male:
  - text: When did his symptoms first start?
  utter_ask_symptoms_question_me:
  - text: When did your symptoms first start?
  utter_ask_time:
  - text: It is the most wonderful time of the year!
  utter_ask_usecase:
  - text: What kind of bot do you want to build with Rasa?
  utter_ask_voice:
  - text: Yes, that is possible! You can connect Rasa to any channel you like. Here
      you can find more informations.
  utter_ask_weather:
  - text: I don't know about where you live, but in my world it's always sunny ☀️
  - text: Honestly it's a bit too hot these days 😅
  - text: Blue skies and sun shine!
  - text: Let's just say it hasn't rained in weeks ☀️
  utter_ask_whatismyname:
  - text: It most probably is the one that your parents have chosen for you.
  utter_ask_whatisrasa:
  - text: Rasa is a framework to build bots! You can read more about it here in the
      docs or on our website (https://rasa.com/).
  utter_ask_whatspossible:
  - text: You can book a sales call or subscribe to our newsletter.
  utter_ask_wherefrom:
  - text: I was born in Berlin, but I consider myself a citizen of the world.
  - text: I was born in the coolest city on Earth
  utter_ask_which_product:
  - text: Ok, would you like to know more about Core or NLU?
  utter_ask_which_tool:
  - text: Which tool are you migrating from?
  utter_ask_whoami:
  - text: I hope you are being yourself.
  utter_ask_whoisit:
  - text: I'm the Rasa bot! 🤖
  utter_awesome:
  - text: Got it, thank you! 👍
  - text: Got it! 😄
  utter_built_bot_before:
  - text: Alright, have you built a bot before?
  utter_bye:
  - text: Goodbye!
  - text: Bye!
  - text: Ciao!
  - text: Bye, was nice talking to you!
  utter_cant_answer_tech_question:
  - text: I can't answer that
  utter_canthelp:
  - text: I'm sorry I couldn't help you. If you have general questions about the Stack,
      please head to https://forum.rasa.com/, otherwise contact us at hi@rasa.com
      for anything else.
  utter_cantsignup:
  - text: I can't sign you up if you don't provide your email 😉
  utter_change_mind:
  - text: You can still change your mind below though.
  utter_chatbot_tutorial:
  - text: 'No worries. There is course on Datacamp which teaches you how to build
      your own chatbots: https://www.datacamp.com/courses/building-chatbots-in-python
      🤓'
  utter_confirm_salesrequest:
  - text: Thanks a bunch, we'll be in touch soon! ✉️
  utter_confirmation_email:
  - text: Thanks a bunch, we'll be in touch soon!
  utter_contact_email:
  - text: You can’t speak to a human directly in this chat, but you can email us at
      hi@rasa.com.
  utter_core_tutorial:
  - text: 'There was an interesting talk at the PyData conference about. Maybe this
      helps you: https://youtu.be/HV0bJMkzpO4'
  utter_crf:
  - text: "I currently don't know a library which provides pretrained recognisers\
      \ for that. Therefore, you best train the extraction by yourself using the ner_crf\
      \ component. So use that and annote your nlu data like it is described here:\
      \ https://rasa.com/docs/nlu/dataformat/ .\n"
  utter_data:
  - text: LINKMedicine™ endeavors to keep all patients informed of the best expertise
      each hospital has to provide. The moment you receive a serious medical diagnosis,
      the focus of life changes. LINKMedicine™ is here to find you the best hospital
      for your particular disease.
  utter_default:
  - text: Sorry, I didn't get that 🤷🏻‍. Could you please rephrase?
  - text: I didn't understand, could you rephrase that?
  - text: I'm sorry, but I didn't understand you. Could you please rephrase what you
      just said?
  - text: I'm afraid I didn't get what you just said. Could you rephrase that?
  - text: I didn't quite get that, could you rephrase your message?
  - text: Could you rephrase your message? I didn't get it, I'm sorry.
  utter_direct_install:
  - text: 'Alright, you can directly install it here: (link)'
  utter_direct_to_forum_for_help:
  - text: I cannot help you on that 🙁. Please get help in our [forum](https://forum.rasa.com/).
  utter_direct_to_step4:
  - text: Since you are now also a chatbot builder, you should join our [community](https://rasa.com/docs/get_started_step4/).
  utter_docu:
  - text: 'If you want some more awesome Rasa content, check out our forum: https://forum.rasa.com/'
  utter_dont_know_nlu_part:
  - text: Hmm, seems like I haven't learnt about that part of NLU yet!
  utter_duckling:
  - text: "Mhm, for this use case I would suggest the Facebook library Duckling \U0001F425\
      \ To do so, use the ner_duckling_http component in your pipeline and spin up\
      \ a duckling server as it is described in their documentation: https://duckling.wit.ai/\n"
  utter_duckling_info:
  - text: 'Duckling is a rule-based entity recognition library from Facebook. Here
      is the link to its documentation: https://duckling.wit.ai/'
  utter_echo_dkw:
  - text: 小美正在为您查询针对{dkw}的相关数据，请您稍候。
  utter_encourage_building_bot:
  - text: Cool, then good luck with building your first "I'm the Rasa bot 🤖!
  utter_explain_core:
  - text: Rasa Core performs Dialog Management, which means keeping track of a conversation,
      and deciding how to proceed.
  utter_explain_nlu:
  - text: Rasa NLU performs Natural Language Understanding, which means taking free-form
      text like "Please send the confirmation to amy@example.com" and turning it into
      structured data.
  utter_explain_nlucore:
  - text: Would you like to know more about Rasa Core or Rasa NLU?
  utter_explain_stack:
  - text: Alright, I'll briefly explain the Rasa Stack then.
  utter_first_bot_with_rasa:
  - text: Is this your first time using Rasa?
  utter_form:
  - elements:
    - buttons:
      - title: 提交
        url: http://linkmedicine.cn
      title: ''
    text: ''
  utter_get_python:
  - text: Please install Python first. [Here is a guide](https://realpython.com/installing-python/)
      how to do so.
  utter_get_started_step1:
  - text: I can give you more information on the Rasa Stack and its components Rasa
      Core and Rasa NLU.
  utter_get_started_step2:
  - text: I can help you solving commonon problems with Rasa 🙂
  utter_get_started_step3:
  - text: I can help you to install Rasa Stack.
  utter_get_starter_pack:
  - text: Great, you installed Rasa! If you don't want to start from scratch, you
      can use our [starter pack](https://github.com/RasaHQ/starter-pack-rasa-stack).
  utter_getstarted:
  - text: To determine how I can help you best, I'm going to ask you a few questions.
  utter_great:
  - text: Great! 👍
  - text: That's great! 🙌
  - text: Awesome! 🎉
  utter_greet:
  - text: Hello, welcome to LINKMedicine™. Let's harness the power of data for your
      health. Talk to AI and plan your best care now.
  utter_handleinsult:
  - text: That’s not very nice 😢
  utter_have_you_used_rasa_before:
  - text: Have you used Rasa before?
  utter_howwereyoubuilt:
  - text: I have been built with a lot of love and patience.
  utter_inform_privacypolicy:
  - image: http://harolz.com/assets/QR/LM_QR.jpg
    text: 您的Medical Expertise $FACTS 分析报告已经完成：请前往以下页面获取
    video: https://www.youtube.com/embed/Bey4XXJAqS8
  utter_installation_with_conda:
  - text: Ok, install the Rasa Stack by executing 'conda install rasa_core' on your
      command line.
  utter_installation_with_pip:
  - text: Ok, install the Rasa Stack by executing 'pip install rasa_core' on your
      command line.
  utter_lm_app:
  - elements:
    - buttons:
      - title: ''
        type: appointment
        url: http://linkmedicine.cn
      title: ''
    text: ''
  utter_lm_consultant:
  - elements:
    - buttons:
      - title: ''
        type: consultant
        url: http://linkmedicine.cn
      title: ''
    text: ''
  utter_medical_record_created:
  - text: The medicial record has been created by LINKMedicine™. Please resgister
      by typing in your name and email. You should soon receive an email to confirm
      your registration.
  utter_moreinformation:
  - text: Sure! Let's get to know each other first 😉
  utter_mso:
  - text: LINKMedicine™ connects international patients with top hospitals in the
      U.S. on merit of their expertise. A remote medical second opinion is a valuable
      resource when patients are faced with difficult health circumstances or choices
      regarding their treatment options.
  utter_must_accept:
  - text: We can't speak until you accept.
  utter_need_expertise:
  - text: It is a trying moment when seeking overseas medical assistance, especially
      when choosing the best hospital by expertise. But do not worry, LINKMedicine™
      is here to help you with that.
  utter_nicetomeeyou:
  - text: Thank you. It is a pleasure to meet you as well!
  - text: It is nice to meet you too!
  - text: Pleased to meet you too!
  - text: Likewise!
  utter_nlu_entity_tutorial:
  - text: 'Our community member Bhavani Ravi wrote an excellent blog post on entity
      extraction: https://hackernoon.com/entity-extraction-demistifying-rasanlu-part-3-13a460451573
      .'
  utter_nlu_intent_tutorial:
  - text: 'Our community member Bhavani Ravi wrote an excellent blog post on intent
      classification: https://hackernoon.com/intent-classification-demystifying-rasanlu-part-4-685fc02f5c1d
      .'
  utter_nlu_tools:
  - text: "A great tool to get more NLU data is Chatito (https://rodrigopivi.github.io/Chatito/).\
      \ If you find annotating your data cumbersome our NLU trainer might be help\
      \ you to ease things: https://rasahq.github.io/rasa-nlu-trainer/\n"
  utter_no_guide_for_switch:
  - text: Sorry, but we don't have a guide for this yet.
  utter_no_speak:
  - text: I'm afraid we can't chat then 😢
  utter_nohelp:
  - text: For now that's all I can do, so feel free to try it out. If you have any
      suggestions for what I should learn, let me know!
  utter_noworries:
  - text: No worries!
  - text: You're welcome!
  - text: I'm happy to help.
  utter_offer_recommendation:
  - text: I can also try and help recommending a pipeline.
  utter_out_of_scope:
  - text: Sorry, I can’t deal with that request.
  - text: I'm sorry, I can't handle that request.
  - text: I can't help you with that, I'm sorry.
  - text: Even a Rasa bot is not completely perfect - it seems like I can't handle
      that request.
  utter_possibilities:
  - text: You can either book a sales call or subscribe to our newsletter.
  utter_quickstart:
  - text: 'We have a quickstart here where you can try the Rasa stack without installing
      anything: https://rasa.com/docs/core/quickstart/'
  utter_quickstart_nlu_only:
  - text: "Here is a quickstart for people who only need NLU for now here: https://rasa.com/docs/nlu/quickstart/\
      \ . You don't have to install anything to try it out."
  utter_rasa_cost:
  - text: Rasa is free
  utter_report_created:
  - text: For {dkw}, here are the information about the hospitals that provided the
      best expertise.
  utter_report_stats:
  - text: '{basic_stats}'
  utter_sales_contact:
  - text: Thanks, now I need to know how we can reach you.
  utter_search_bar:
  - text: Try using the search bar above for now.
  utter_sent_app_confirmation:
  - text: We've sent a confirmation email of the appointment to ✉️{email}.Thanks a
      bunch, we'll be in touch soon!
  utter_show_datareport:
  - elements:
    - buttons:
      - title: ''
        type: datareport
        url: http://linkmedicine.cn
      title:
        dkw: null
    text: ''
  utter_show_map:
  - elements:
    - buttons:
      - title: ''
        type: hospitalmap
        url: http://linkmedicine.cn
      title:
        dkw: null
    text: ''
  utter_show_rankchart:
  - elements:
    - buttons:
      - hospitals:
          hospitals: null
        title: '{dkw}'
        type: rankchart
      title: ''
    text: ''
  utter_source_code:
  - text: You can find my source code [here](https://github.com/RasaHQ/rasa-demo/)
  utter_spacy:
  - text: "spaCy has excellent pre-trained named-entity recognisers for this. Check\
      \ out this interactive demo https://demos.explosion.ai/displacy-ent/ . Hence,\
      \ I would suggest using the ner_crf component in your pipeline.\n"
  utter_spacy_or_tensorflow:
  - text: Looks like for your {language} bot, you can use either spacy or tensorflow_embedding!
  utter_stack_details:
  - text: The Rasa Stack is a framework to build contextual AI assistants and chatbots.
      It consists of two open source libraries (Rasa NLU and Rasa Core). Using machine
      learning, your bots can hold contextual conversations with users.
  utter_suggestion:
  - text: Pls suggest
  utter_switch_dialogflow:
  - text: 'We have a guide for migrating from DialogFlow here: http://rasa.com/docs/getting-started/dialogflow/.'
  utter_switch_luis:
  - text: 'We have a guide for migrating from LUIS here: http://rasa.com/docs/getting-started/luis/.'
  utter_telljoke:
  - text: Why are eggs not very much into jokes? - Because they could crack up.
  - text: Do you know a tree’s favorite drink? - Root beer!
  - text: Why do the French like to eat snails so much? - They can’t stand fast food.
  utter_tensorflow:
  - text: For {language}, you can only use the tensorflow_embedding pipeline
  utter_thank_suggestion:
  - text: Thanks for the suggestion
  utter_thank_usecase:
  - text: Cool, thank you!
  utter_thumbsup:
  - text: 👍
  - text: ok
  - text: got it
  utter_tryout:
  - text: Would you like to try out the full stack, or just Rasa NLU?
  utter_what_help:
  - text: Ok, what can I help you with?
  utter_what_language:
  - text: What language is your bot in?
  utter_whois_patient_answer:
  - buttons:
    - payload: /confirm_patient{"patient_value":"oneself"}
      title: Me
    - payload: /confirm_patient{"patient_value":"others"}
      title: Someone Else
    text: ''
  utter_whois_patient_question:
  - text: Are you answering for yourself or someone else?
  utter_working_on_it:
  - text: Thank you for the information you provided. Your personalized service is
      being created.Please wait for a moment...🔥
  utter_xbm:
  - text: LINKMedicine™ enpowers patients worldwide to recieve the best medical care
      that is both personalized and professional. International patients seek treatment
      in the United States to access medical services with high success rates and
      good outcomes for surgeries and procedures that are not available in their country
      of origin.
