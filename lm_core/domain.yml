
entities:
  - jobfunction
  - diagnosis
  - company
  - email
  - name
  - amount-of-money
  - number
  - value
  - current_api
  - product
  - feedback_value
  - patient_value
  - gender_value
  - service_type
  - basic_knowledge
  - lm_appointment
  - language
  - dkw
  - hospitals
  - nlu_part
  - entity

intents:
  - enter_data: {use_entities: false}
  - out_of_scope
  - mood_confirm
  - contact_sales
  - signup_newsletter
  - confirm_gender
  - confirm_service_type
  - confirm_email
  - confirm_symptoms
  - confirm_current_medication
  - confirm_past_surgery
  - confirm_medical_appointment
  - confirm_dkw
  - confirm_lm_appointment
  - confirm_lm_consultant
  - greet
  - confirm_patient
  - confirm_age
  - confirm_basic_knowledge
  - human_handoff
  - deny
  - ask_builder
  - ask_weather
  - ask_howdoing
  - ask_whatspossible
  - ask_whatisrasa
  - ask_isbot
  - ask_howold
  - ask_languagesbot
  - ask_restaurant
  - ask_time
  - ask_wherefrom
  - ask_whoami
  - ask_whatismyname
  - howwereyoubuilt
  - handleinsult
  - nicetomeeyou
  - telljoke
  - out_of_scope
  - thank
  - ask_whoisit
  - bye
  - canthelp
  - feedback
  - switch
  - new_project
  - how_to_get_started
  - technical_question
  - nlu_info
  - pipeline_recommendation
  - nlu_generation_tool_recommendation
  - rasa_cost
  - source_code
  - suggestion
  - install_rasa
  - get_started_step1
  - get_started_step2
  - get_started_step3
  - get_started_step4
  - ask_faq_platform
  - ask_faq_languages
  - ask_faq_tutorialcore
  - ask_faq_tutorialnlu
  - ask_faq_opensource
  - ask_faq_voice
  - ask_faq_slots
  - ask_faq_channels
  - ask_faq_differencecorenlu

slots:
  dkw:
    type: text
  budget:
    type: text
  company_name:
    type: text
  email:
    type: text
  job_function:
    type: text
  person_name:
    type: text
  subscribed:
    type: bool
  use_case:
    type: text
  data_stored:
    type: bool
  feedback_value:
    type: categorical
    values:
      - positive
      - negative
  patient_value:
    type: categorical
    values:
      - oneself
      - others
  gender_value:
    type: categorical
    values:
      - male
      - female
  service_type:
    type: categorical
    values:
      - data
      - mso
      - xbm
      - undecided
  basic_knowledge:
    type: categorical
    values:
      - basic_knowledge_yes
      - basic_knowledge_no
  lm_appointment:
    type: categorical
    values:
      - lm_appointment_yes
      - lm_appointment_no
  current_api:
    type: categorical
    values:
      - dialogflow
      - luis
  product:
    type: categorical
    values:
      - core
      - nlu
      - stack
  unknown_product:
    type: unfeaturized
  nlu_part:
    type: categorical
    values:
      - entity recognition
      - intent classification
      - duckling
  unknown_nlu_part:
    type: unfeaturized
  can_use_spacy:
    type: bool
  entity_extractor:
    type: categorical
    values:
      - ner_crf
      - ner_spacy
      - ner_duckling_http
  language:
    type: unfeaturized
  onboarding:
    type: bool
  suggestion:
    type: unfeaturized
  package_manager:
    type: text
  problem_description:
    type: text
  shown_privacy:
    type: unfeaturized
  hospitals:
    type: unfeaturized
  basic_stats:
    type: text
  city_data:
    type: text
templates:
  utter_report_stats:
    - text: "{basic_stats}"
  utter_show_map:
    - text: ""
      elements:         
        - title: {dkw}
          buttons: 
            - title: ""
              url: "http://linkmedicine.cn"
              type: "hospitalmap"
  utter_show_rankchart:
    - text: ""
      elements:         
        - title: ""
          buttons: 
            - title: "{dkw}"
              hospitals: {hospitals}
              type: "rankchart"
  utter_show_datareport:
    - text: ""
      elements:         
        - title: {dkw}
          buttons: 
            - title: "{dkw}"
              url: "http://linkmedicine.cn"
              type: "datareport"
  utter_echo_dkw:
    - text: "Â∞èÁæéÊ≠£Âú®‰∏∫ÊÇ®Êü•ËØ¢ÈíàÂØπ{dkw}ÁöÑÁõ∏ÂÖ≥Êï∞ÊçÆÔºåËØ∑ÊÇ®Á®çÂÄô„ÄÇ"
  utter_ask_budget:
    - text: "What's your annual budget for conversational AI? üí∏"
  utter_ask_businessmail:
    - text: "What's your business email?"
  utter_ask_company:
    - text: "What company do you work for?"
  utter_great:
    - text: "Great! üëç"
    - text: "That's great! üôå"
    - text: "Awesome! üéâ"
  utter_ask_email_question:
    - text: "ËØ∑ÈóÆÊÇ®ÁöÑÈÇÆÁÆ±Âú∞ÂùÄÊòØ‰ªÄ‰πàÔºü"  
  utter_ask_email_answer:
    - text: ""
      elements:         
        - title: ""
          buttons: 
            - title: "Êèê‰∫§"
              url: "http://linkmedicine.cn"
              type: "register"  
  utter_awesome:
    - text: "Got it, thank you! üëç"
    - text: "Got it! üòÑ"
  utter_ask_goal:
    - text: "Do you want more Rasa in your life? You can subscribe to our newsletter or you can talk to our nice sales team üßû‚Äç"
  utter_ask_jobfunction:
    - text: "What's your job? üï¥"
  utter_ask_usecase:
    - text: "What kind of bot do you want to build with Rasa?"
  utter_confirm_salesrequest:
    - text: "Thanks a bunch, we'll be in touch soon! ‚úâÔ∏è"
  utter_docu:
    - text: "If you want some more awesome Rasa content, check out our forum:
      https://forum.rasa.com/"
  utter_quickstart:
    - text: "We have a quickstart here where you can try the Rasa stack without installing anything: https://rasa.com/docs/core/quickstart/"
  utter_quickstart_nlu_only:
    - text: "Here is a quickstart for people who only need NLU for now here: https://rasa.com/docs/nlu/quickstart/ . You don't have to install anything to try it out."
  utter_ask_migration:
    - text: "Are you migrating from another tool?"
  utter_switch_dialogflow:
    - text: "We have a guide for migrating from DialogFlow here: http://rasa.com/docs/getting-started/dialogflow/."
  utter_switch_luis:
    - text: "We have a guide for migrating from LUIS here: http://rasa.com/docs/getting-started/luis/."
  utter_need_expertise:
    - text: "We are here to find you the best hospital for your particular disease."  
  utter_mso:
    - text: "We are here to find you the best hospital for your particular disease."
  utter_data:
    - text: "We are here to find you the best hospital for your particular disease."
  utter_xbm:
    - text: "We are here to find you the best hospital for your particular disease."
  utter_greet:
    - text: "Hello, welcome to LINKMedicine - harness the power of data for your health. Let's plan your best care together." 
  utter_form:
    - text: ""
      elements:         
        - title: ""
          buttons: 
            - title: "Êèê‰∫§"
              url: "http://linkmedicine.cn"  
  utter_whois_patient_question:
    - text: "Are you answering for yourself or someone else?"  
  utter_whois_patient_answer:
    - text: ""
      buttons:
        - title: "Me"
          payload: "/confirm_patient{\"patient_value\":\"oneself\"}"
        - title: "Someone Else"
          payload: "/confirm_patient{\"patient_value\":\"others\"}"
  utter_ask_gender_question_me:
    - text: "Are you male or female?"
  utter_ask_gender_question_someone_else:
    - text: "Is the patient male or female?"
  utter_ask_gender_answer:
    - text: ""
      buttons:
        - title: "Male"
          payload: "/confirm_gender{\"gender_value\":\"male\"}"
        - title: "Female"
          payload: "/confirm_gender{\"gender_value\":\"female\"}"
  utter_ask_age_question_me:
    - text: "How old are you?"
  utter_ask_age_question_male:
    - text: "How old is he?"
  utter_ask_age_question_female:
    - text: "How old is she?"
  utter_ask_age_answer:
    - text: ""
      elements:         
        - title: ""
          buttons: 
            - title: ""
              url: "http://linkmedicine.cn"
              type: "age"
  utter_ask_service_type_question:    
      - text: "Which of the following options best describes your medical needs?" 
  utter_ask_service_type_answer:
    - text: ""
      buttons:
        - title: "Help choose hospitals with best expertise for my diseases"
          payload: "/confirm_service_type{\"service_type\":\"data\"}"
        - title: "Seek remote second opinion from expertise hospitals"
          payload: "/confirm_service_type{\"service_type\":\"mso\"}"
        - title: "Make direct referal to expertise hospitals"
          payload: "/confirm_service_type{\"service_type\":\"undecided\"}"
        - title: "I am an international patient seeking medical care"
          payload: "/confirm_service_type{\"service_type\":\"xbm\"}"
  utter_ask_basic_knowledge_question:
    - text: "Do you have knowledge of the patient's conditionÔºü" 
  utter_ask_basic_knowledge_answer:
    - text: ""
      buttons:
        - title: "Yes"
          payload: "/confirm_basic_knowledge{\"basic_knowledge\":\"basic_knowledge_yes\"}"
        - title: "Basically"
          payload: "/confirm_basic_knowledge{\"basic_knowledge\":\"basic_knowledge_yes\"}"
        - title: "Not so much"
          payload: "/confirm_basic_knowledge{\"basic_knowledge\":\"basic_knowledge_no\"}"
  utter_ask_cooperation:
    - text: "Please answer following question to the best of your knowledge."
  utter_ask_dkw_question_me:
    - text: "What is your primary diagnosis?"
  utter_ask_dkw_question_male:
    - text: "What is his primary diagnosis?"
  utter_ask_dkw_question_female:
    - text: "What is her primary diagnosis?"
  utter_ask_dkw_answer:
    - text: ""
      elements:         
        - title: ""
          buttons: 
            - title: ""
              url: "http://linkmedicine.cn"
              type: "dkwcomplete"
  utter_ask_symptoms_question_me:
    - text: "When did your symptoms first start?"
  utter_ask_symptoms_question_male:
    - text: "When did his symptoms first start?"
  utter_ask_symptoms_question_female:
    - text: "When did her symptoms first start?"  
  utter_ask_symptoms_question_instruction:
    - text: "Tab \"Submit\" when you are finished with the description for symptoms; click \"Unclear\" if you don't know the patient medical information"
  utter_ask_symptoms_answer:
    - text: "" 
      elements:         
        - title: ""
          buttons: 
            - title: "Êèê‰∫§"
              url: "http://linkmedicine.cn"
              type: "symptom"
  utter_ask_current_medication_question_me:
    - text: "What is your current treatment? "
  utter_ask_current_medication_question_male:
    - text: "What is his current treatment? "
  utter_ask_current_medication_question_female:
    - text: "What is her current treatment? "
  utter_ask_current_medication_answer:
    - text: ""
      elements:         
        - title: ""
          buttons: 
            - title: ""
              url: "http://linkmedicine.cn"
              type: "medication"
  utter_ask_diagnosis:
    - text: "‰Ω†ÊúâÂáÜÂ§áÂ•ΩÊÇ£ËÄÖÁöÑËØäÊñ≠‰π¶ÂíåÊúÄËøëÁöÑÊ≤ªÁñóËÆ∞ÂΩï‰πàÔºü"
  utter_ask_medical_appointment_question_me:
    - text: "Do you have any upcoming appointments or procedures?"
  utter_ask_medical_appointment_question_male:
    - text: "Does he have any upcoming appointments or procedures?"
  utter_ask_medical_appointment_question_female:
    - text: "Does she have any upcoming appointments or procedures?"
  utter_ask_medical_appointment_answer:
    - text: ""
      elements:         
        - title: ""
          buttons: 
            - title: ""
              url: "http://linkmedicine.cn"
              type: "datepicker"
  utter_ask_medical_appointment_question_instruction:
    - text: "Again, please tab \"Submit\" after you select the date of your medical appointment in the datepicker; click \"Unclear\" if currently you don't have an active medical appointment. "
  utter_ask_lm_consultant:
    - text: "ËØ∑‰ªé‰∏ãÂàóÈÄâÈ°π‰∏≠ÈÄâÊã©ÈúÄË¶ÅÂí®ËØ¢ÁöÑ‰∏ìÂÆ∂Ôºö"
  utter_lm_appointment_instruction:
    - text: "Please indicate when you would like to shcedule your appointment and your phone number."
  utter_lm_consultant:
    - text: ""
      elements:         
        - title: ""
          buttons: 
            - title: ""
              url: "http://linkmedicine.cn"
              type: "consultant"   
  utter_ask_lm_appointment:
    - text: "Would you like to make an appointment for data interpretation?"
  utter_ask_lm_appointment_answer:
    - text: ""
      buttons:
        - title: "Yes, please."
          payload: "/confirm_lm_appointment{\"lm_appointment\":\"lm_appointment_yes\"}"
        - title: "No, thanks."
          payload: "/confirm_lm_appointment{\"lm_appointment\":\"lm_appointment_no\"}"
  utter_lm_appointment:
    - text: ""
      elements:         
        - title: ""
          buttons: 
            - title: ""
              url: "http://linkmedicine.cn"
              type: "appointment" 
  utter_working_on_it:
    - text: "Thank you for the information you provided. Your personalized service is being created.Please wait for a moment...üî•"
  utter_medical_record_created:
    - text: "Thank you. We've configured your hospital analysis. Please resgister to start. You should soon receive an email to confirm your registration."
  utter_report_created:
  - text: "For {dkw}, here are the information about the hospitals that provided the best expertise."
  utter_sent_app_confirmation:
    - text: "We've sent a confirmation email of the appointment to ‚úâÔ∏è:{email}.Thanks a bunch, we'll be in touch soon!"
  utter_confirmation_email:
    - text: "Thanks a bunch, we'll be in touch soon!"
  utter_inform_privacypolicy:
  - text: "ÊÇ®ÁöÑMedical Expertise $FACTS ÂàÜÊûêÊä•ÂëäÂ∑≤ÁªèÂÆåÊàêÔºöËØ∑ÂâçÂæÄ‰ª•‰∏ãÈ°µÈù¢Ëé∑Âèñ"
    image: "http://harolz.com/assets/QR/LM_QR.jpg"
    video: "https://www.youtube.com/embed/Bey4XXJAqS8"
  utter_moreinformation:
    - text: "Sure! Let's get to know each other first üòâ"
  utter_sales_contact:
    - text: "Thanks, now I need to know how we can reach you."
  utter_ask_name:
    - text: "What's your name?"
  utter_already_subscribed:
    - text: "Looks like {email} is already subscribed - good choice!
    If you haven't received a newsletter in a while, maybe check your spam folder üóë"
  utter_contact_email:
    - text: "You can‚Äôt speak to a human directly in this chat, but you can email us at hi@rasa.com."
  utter_no_speak:
    - text: "I'm afraid we can't chat then üò¢"
  utter_ask_whatspossible:
    - text: "You can book a sales call or subscribe to our newsletter."
  utter_ask_weather:
    - text: "I don't know about where you live, but in my world it's always sunny ‚òÄÔ∏è"
    - text: "Honestly it's a bit too hot these days üòÖ"
    - text: "Blue skies and sun shine!"
    - text: "Let's just say it hasn't rained in weeks ‚òÄÔ∏è"
  utter_ask_builder:
    - text: "The engineers at Rasa üõ†"
    - text: "One of the smart engineers at Rasa! üß†"
  utter_ask_howdoing:
    - text: "I'm great! Thanks for asking."
    - text: "I'm good, thanks!"
    - text: "A little bit too warm, otherwise fine."
  utter_ask_whatisrasa:
    - text: "Rasa is a framework to build bots! You can read more about it here in the docs or on our website (https://rasa.com/)."
  utter_out_of_scope:
    - text: "Sorry, I can‚Äôt deal with that request."
    - text: "I'm sorry, I can't handle that request."
    - text: "I can't help you with that, I'm sorry."
    - text: "Even a Rasa bot is not completely perfect - it seems like I can't handle that request."
  utter_possibilities:
    - text: "You can either book a sales call or subscribe to our newsletter."
  utter_ask_whoisit:
    - text: "I'm the Rasa bot! ü§ñ"
  utter_change_mind:
    - text: "You can still change your mind below though."
  utter_must_accept:
    - text: "We can't speak until you accept."
  utter_noworries:
    - text: "No worries!"
    - text: "You're welcome!"
    - text: "I'm happy to help."
  utter_bye:
    - text: "Goodbye!"
    - text: "Bye!"
    - text: "Ciao!"
    - text: "Bye, was nice talking to you!"
  utter_default:
    - text: "Please input a valid DKW."
      elements:         
        - title: ""
          buttons: 
            - title: ""
              url: "http://linkmedicine.cn"
              type: "dkwcomplete"
  utter_ask_feedback_question:
    - text: "How is this conversation going?"
  utter_ask_feedback:
    - text: ""
      buttons:
        - title: "Likeüòâ"
          payload: "/feedback{\"feedback_value\":\"positive\"}"
        - title: "Dislikeü§∑üèª‚Äç"
          payload: "/feedback{\"feedback_value\":\"negative\"}"
  utter_thank_usecase:
    - text: "Cool, thank you!"
  utter_canthelp:
    - text: "I'm sorry I couldn't help you. If you have general questions about the Stack, please head to https://forum.rasa.com/, otherwise contact us at hi@rasa.com for anything else."
  utter_nohelp:
    - text: "For now that's all I can do, so feel free to try it out. If you have any suggestions for what I should learn, let me know!"
  utter_thumbsup:
    - text: "üëç"
    - text: "ok"
    - text: "got it"
  utter_cantsignup:
    - text: "I can't sign you up if you don't provide your email üòâ"
  utter_ask_isbot:
    - text: "Yep I'm a bot!"
  utter_cant_answer_tech_question:
    - text: "I can't answer that"
  utter_have_you_used_rasa_before:
    - text: "Have you used Rasa before?"
  utter_built_bot_before:
    - text: "Alright, have you built a bot before?"
  utter_anything_else:
    - text: "It's been a pleasure to chat with you. Hope you've found a solution to your problem."
  utter_encourage_building_bot:
    - text: Cool, then good luck with building your first "I'm the Rasa bot ü§ñ!
  utter_chatbot_tutorial:
    - text: "No worries. There is course on Datacamp which teaches you how to build your own chatbots: https://www.datacamp.com/courses/building-chatbots-in-python ü§ì"
  utter_no_guide_for_switch:
    - text: "Sorry, but we don't have a guide for this yet."
  utter_ask_which_product:
    - text: "Ok, would you like to know more about Core or NLU?"
  utter_core_tutorial:
    - text: "There was an interesting talk at the PyData conference about. Maybe this helps you: https://youtu.be/HV0bJMkzpO4"
  utter_ask_for_nlu_specifics:
    - text: "Anything, in particular, e.g. intent classification or entity recognition?"
  utter_dont_know_nlu_part:
    - text: "Hmm, seems like I haven't learnt about that part of NLU yet!"
  utter_nlu_intent_tutorial:
    - text: "Our community member Bhavani Ravi wrote an excellent blog post on intent classification: https://hackernoon.com/intent-classification-demystifying-rasanlu-part-4-685fc02f5c1d ."
  utter_nlu_entity_tutorial:
    - text: "Our community member Bhavani Ravi wrote an excellent blog post on entity extraction: https://hackernoon.com/entity-extraction-demistifying-rasanlu-part-3-13a460451573 ."
  utter_offer_recommendation:
    - text: "I can also try and help recommending a pipeline."
  utter_what_language:
    - text: "What language is your bot in?"
  utter_ask_entities:
    - text: "To help you, what kind of entities do you want to extract?"
  utter_search_bar:
    - text: "Try using the search bar above for now."
  utter_spacy_or_tensorflow:
    - text: "Looks like for your {language} bot, you can use either spacy or tensorflow_embedding!"
  utter_tensorflow:
    - text: "For {language}, you can only use the tensorflow_embedding pipeline"
  utter_spacy:
    - text: >
        spaCy has excellent pre-trained named-entity recognisers for this. Check out this interactive demo https://demos.explosion.ai/displacy-ent/ .
        Hence, I would suggest using the ner_crf component in your pipeline.
  utter_duckling:
    - text: >
        Mhm, for this use case I would suggest the Facebook library Duckling üê•
        To do so, use the ner_duckling_http component in your pipeline and spin up a duckling server as it is described in their documentation: https://duckling.wit.ai/
  utter_crf:
    - text: >
        I currently don't know a library which provides pretrained recognisers for that. Therefore, you best train the extraction by yourself using the ner_crf component.
        So use that and annote your nlu data like it is described here: https://rasa.com/docs/nlu/dataformat/ .
  utter_nlu_tools:
    - text: >
        A great tool to get more NLU data is Chatito (https://rodrigopivi.github.io/Chatito/).
        If you find annotating your data cumbersome our NLU trainer might be help you to ease things: https://rasahq.github.io/rasa-nlu-trainer/
  utter_duckling_info:
    - text: "Duckling is a rule-based entity recognition library from Facebook. Here is the link to its documentation: https://duckling.wit.ai/"
  utter_rasa_cost:
    - text: "Rasa is free"
  utter_source_code:
    - text: "You can find my source code [here](https://github.com/RasaHQ/rasa-demo/)"
  utter_what_help:
    - text: "Ok, what can I help you with?"
  utter_first_bot_with_rasa:
    - text: "Is this your first time using Rasa?"
  utter_getstarted:
    - text: "To determine how I can help you best, I'm going to ask you a few questions."
  utter_explain_stack:
    - text: "Alright, I'll briefly explain the Rasa Stack then."
  utter_stack_details:
    - text: "The Rasa Stack is a framework to build contextual AI assistants and chatbots. It consists of two open source libraries (Rasa NLU and Rasa Core). Using machine learning, your bots can hold contextual conversations with users."
  utter_explain_nlucore:
    - text: "Would you like to know more about Rasa Core or Rasa NLU?"
  utter_explain_nlu:
    - text: 'Rasa NLU performs Natural Language Understanding, which means taking free-form text like "Please send the confirmation to amy@example.com" and turning it into structured data.'
  utter_explain_core:
    - text: "Rasa Core performs Dialog Management, which means keeping track of a conversation, and deciding how to proceed."
  utter_tryout:
    - text: "Would you like to try out the full stack, or just Rasa NLU?"
  utter_also_explain_nlu:
    - text: "Would you also like me to explain Rasa NLU?"
  utter_also_explain_core:
    - text: "Would you also like me to explain Rasa Core?"
  utter_direct_install:
    - text: "Alright, you can directly install it here: (link)"
  utter_ask_which_tool:
    - text: "Which tool are you migrating from?"
  utter_suggestion:
    - text: "Pls suggest"
  utter_thank_suggestion:
    - text: "Thanks for the suggestion"
  utter_ask_howold:
    - text: "42"
    - text: "Old enough to be a bot"
    - text: "Age is just an issue of mind over matter. If you don‚Äôt mind, it doesn‚Äôt matter."
  utter_ask_languagesbot:
    - text: "I can spell baguette in French, but unfortunately English is the only language I can answer you in."
    - text: "I am in the process of learning, but at the moment I can only speak English."
  utter_ask_restaurant:
    - text: "I am sorry I can‚Äôt recommend you a restaurant as I usually cook at home."
  utter_ask_time:
    - text: "It is the most wonderful time of the year!"
  utter_ask_wherefrom:
    - text: "I was born in Berlin, but I consider myself a citizen of the world."
    - text: "I was born in the coolest city on Earth"
  utter_ask_whoami:
    -  text: "I hope you are being yourself."
  utter_handleinsult:
    - text: "That‚Äôs not very nice üò¢"
  utter_nicetomeeyou:
    - text: "Thank you. It is a pleasure to meet you as well!"
    - text: "It is nice to meet you too!"
    - text: "Pleased to meet you too!"
    - text: "Likewise!"
  utter_telljoke:
    - text: "Why are eggs not very much into jokes? - Because they could crack up."
    - text: "Do you know a tree‚Äôs favorite drink? - Root beer!"
    - text: "Why do the French like to eat snails so much? - They can‚Äôt stand fast food."
  utter_ask_whatismyname:
    - text: "It most probably is the one that your parents have chosen for you."
  utter_howwereyoubuilt:
    - text: "I have been built with a lot of love and patience."
  utter_ask_python_installed:
    - text: "Do you have Python installed?"
  utter_get_python:
    - text: "Please install Python first. [Here is a guide](https://realpython.com/installing-python/) how to do so."
  utter_ask_pip_or_conda:
    - text: "Do you want to install pip or conda for the installation?"
  utter_installation_with_pip:
    - text: "Ok, install the Rasa Stack by executing 'pip install rasa_core' on your command line."
  utter_installation_with_conda:
    - text: "Ok, install the Rasa Stack by executing 'conda install rasa_core' on your command line."
  utter_ask_ready_to_build:
    - text: "Ready to start building a chatbot?"
  utter_ask_describe_problem:
    - text: "Can you describe the problem you are having?"
  utter_direct_to_forum_for_help:
    - text: "I cannot help you on that üôÅ. Please get help in our [forum](https://forum.rasa.com/)."
  utter_get_starter_pack:
    - text: "Great, you installed Rasa! If you don't want to start from scratch, you can use our [starter pack](https://github.com/RasaHQ/starter-pack-rasa-stack)."
  utter_direct_to_step4:
    - text: "Since you are now also a chatbot builder, you should join our [community](https://rasa.com/docs/get_started_step4/)."
  utter_ask_if_problem:
    - text: "Do you have a problem?"
  utter_get_started_step1:
    - text: "I can give you more information on the Rasa Stack and its components Rasa Core and Rasa NLU."
  utter_get_started_step2:
    - text: "I can help you solving commonon problems with Rasa üôÇ"
  utter_get_started_step3:
    - text: "I can help you to install Rasa Stack."
  utter_ask_faq_platform:
    - text: "Rasa Platform is our enterprise product. It expands Rasa Stack and empowers business users to iterate faster, change the content of the AI assistant and see what impact it had."
  utter_ask_faq_languages:
    - text: "You can use Rasa NLU to build assistants in any language you want!"
  utter_ask_faq_tutorialcore:
    - text: "You can find a preview of Rasa Core [here](https://rasa.com/docs/core/quickstart/)."
  utter_ask_faq_tutorialnlu:
    - text: "You can find a preview of Rasa NLU [here](https://rasa.com/docs/core/quickstart/)."
  utter_ask_faq_opensource:
    - text: "Yes. We strive to provide well-maintained and documented open source tools, allowing all makers to build the best AI assistants without friction."
  utter_ask_faq_voice:
    - text: "Yes, that is possible! You can connect Rasa to any channel you like. Here you can find more informations."
  utter_ask_faq_slots:
    - text: "Slots act as a key-value store which can be used to store information the user provided (e.g their home city) as well as information gathered about the outside world (e.g. the result of a database query)."
  utter_ask_faq_channels:
    - text: "We have a comprehensive list of connectors, but if you do not find the one you are looking for you can always create a custom connector following this guide."
  utter_ask_faq_differencecorenlu:
    - text: "Rasa NLU‚Äôs job is to interpret messages, and Rasa Core‚Äôs job is to decide what should happen next."
  utter_ask_voice:
    - text:  "Yes, that is possible! You can connect Rasa to any channel you like. Here you can find more informations."

actions:
  - fallback
  - utter_echo_dkw
  - utter_show_map
  - utter_show_rankchart
  - utter_show_datareport
  - utter_greet
  - utter_form
  - utter_mso
  - utter_need_expertise
  - utter_data
  - utter_xbm
  - utter_whois_patient_question
  - utter_whois_patient_answer
  - utter_ask_gender_question_me
  - utter_ask_gender_question_someone_else
  - utter_ask_gender_answer
  - utter_ask_age_question_me
  - utter_ask_age_question_male
  - utter_ask_age_question_female
  - utter_ask_age_answer
  - utter_ask_feedback_question
  - utter_ask_service_type_question
  - utter_ask_service_type_answer
  - utter_ask_basic_knowledge_question
  - utter_ask_basic_knowledge_answer
  - utter_ask_lm_appointment_answer
  - utter_lm_appointment_instruction
  - utter_ask_cooperation
  - utter_ask_dkw_question_me
  - utter_ask_dkw_question_male
  - utter_ask_dkw_question_female
  - utter_ask_dkw_answer
  - utter_ask_symptoms_question_me
  - utter_ask_symptoms_question_male
  - utter_ask_symptoms_question_female
  - utter_ask_symptoms_question_instruction
  - utter_ask_symptoms_answer
  - utter_ask_current_medication_question_me
  - utter_ask_current_medication_question_male
  - utter_ask_current_medication_question_female
  - utter_ask_current_medication_question_instruction
  - utter_ask_current_medication_answer
  - utter_ask_medical_appointment_question_me
  - utter_ask_medical_appointment_question_male
  - utter_ask_medical_appointment_question_female
  - utter_ask_medical_appointment_question_instruction
  - utter_ask_medical_appointment_answer
  - utter_ask_lm_appointment
  - utter_lm_appointment
  - utter_ask_lm_consultant
  - utter_lm_consultant
  - utter_ask_email_question
  - utter_ask_email_answer
  - utter_working_on_it
  - utter_medical_record_created  
  - utter_report_created 
  - utter_ask_usecase
  - utter_ask_businessmail
  - utter_ask_jobfunction
  - utter_ask_budget
  - utter_ask_company
  - utter_ask_goal
  - utter_inform_privacypolicy
  - utter_moreinformation
  - utter_confirm_salesrequest
  - utter_docu
  - utter_confirmation_email
  - utter_sales_contact
  - utter_already_subscribed
  - utter_contact_email
  - utter_no_speak
  - utter_out_of_scope
  - utter_possibilities
  - utter_ask_name
  - utter_change_mind
  - utter_must_accept
  - utter_noworries
  - utter_bye
  - utter_awesome
  - utter_great
  - utter_thank_usecase
  - utter_canthelp
  - utter_nohelp
  - utter_thumbsup
  - utter_cantsignup
  - utter_ask_feedback
  - utter_quickstart
  - utter_quickstart_nlu_only
  - utter_ask_migration
  - utter_switch_dialogflow
  - utter_switch_luis
  - utter_cant_answer_tech_question
  - utter_have_you_used_rasa_before
  - utter_are_you_new_to_chatbots
  - utter_encourage_building_bot
  - utter_anything_else
  - utter_chatbot_tutorial
  - utter_no_guide_for_switch
  - utter_ask_which_product
  - utter_ask_for_nlu_specifics
  - utter_core_tutorial
  - utter_dont_know_nlu_part
  - utter_nlu_intent_tutorial
  - utter_nlu_entity_tutorial
  - utter_offer_recommendation
  - utter_what_language
  - utter_ask_entities
  - utter_search_bar
  - utter_spacy_or_tensorflow
  - utter_tensorflow
  - utter_spacy
  - utter_duckling
  - utter_crf
  - utter_nlu_tools
  - utter_duckling_info
  - utter_rasa_cost
  - utter_source_code
  - utter_what_help
  - utter_first_bot_with_rasa
  - utter_getstarted
  - utter_explain_stack
  - utter_stack_details
  - utter_explain_nlucore
  - utter_explain_nlu
  - utter_explain_core
  - utter_tryout
  - utter_also_explain_nlu
  - utter_also_explain_core
  - utter_direct_install
  - utter_built_bot_before
  - utter_ask_which_tool
  - utter_suggestion
  - utter_ask_python_installed
  - utter_get_python
  - utter_ask_pip_or_conda
  - utter_installation_with_pip
  - utter_installation_with_conda
  - utter_ask_ready_to_build
  - utter_ask_describe_problem
  - utter_direct_to_forum_for_help
  - utter_get_starter_pack
  - utter_direct_to_step4
  - utter_ask_if_problem
  - utter_get_started_step1
  - utter_get_started_step2
  - utter_get_started_step3
  - utter_get_started_step4
  - utter_ask_faq_platform
  - utter_ask_faq_languages
  - utter_ask_faq_tutorialcore
  - utter_ask_faq_tutorialnlu
  - utter_ask_faq_opensource
  - utter_ask_faq_voice
  - utter_ask_faq_slots
  - utter_ask_faq_channels
  - utter_ask_faq_differencecorenlu
  - action_subscribe_newsletter
  - action_store_sales_info
  - action_store_budget
  - action_store_usecase
  - action_chitchat
  - action_faqs
  - action_store_name
  - action_store_company
  - action_store_dkw
  - action_store_job
  - action_store_email
  - action_pause
  - action_store_unknown_product
  - action_store_unknown_nlu_part
  - action_store_bot_language
  - action_store_entity_extractor
  - action_set_onboarding
  - utter_ask_weather
  - utter_ask_builder
  - utter_ask_howdoing
  - utter_ask_whoisit
  - utter_ask_whatisrasa
  - utter_ask_isbot
  - utter_ask_howold
  - utter_ask_languagesbot
  - utter_ask_restaurant
  - utter_ask_time
  - utter_ask_wherefrom
  - utter_ask_whoami
  - utter_handleinsult
  - utter_nicetomeeyou
  - utter_telljoke
  - utter_ask_whatismyname
  - utter_howwereyoubuilt
  - utter_ask_whatspossible
  - action_select_installation_command
  - action_store_problem_description
  - action_greet_user
  - action_report_hospitals
  - action_report_stats
  - action_reply_email
  - utter_sent_app_confirmation
  - action_report_city
  - utter_report_stats


forms:
  - suggestion_form
